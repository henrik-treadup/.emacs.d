* Python shell
There are three things that we could do.

1. run-python
2. Switch to python shell
3. Send buffer to python shell

C-c C-c
C-c C-z

* Python code editing
Using python mode better.

* Debugging Python code
Debugging Python code.

Some options are the following.
realgud
gud
pdb

https://github.com/spiside/pdb-tutorial
* Django
Configure Djangonauts so that we can run Django manage.py commands from Emacs.

I might have to set the python-shell-extra-pythonpaths variable.
* Refactoring in Emacs
Figure out how people refactor code in Emacs.

How do I make larger scale changes to a code base? Do people usually
run programs that modify the buffer?

* Ediff
Figure out how to use Ediff
* Edebug
Figure out how to use Edebug
* Emerge
Figure out the emerge tool.

* Smerge
This is a simpler way of merging files.

It seems that smerge-mode comes builtin with Emacs.

And it seems to be really good.

* Projectile
Get better at Projectile.
https://tuhdo.github.io/helm-projectile.html
* Magit
Get better at Magit.

* Tangle
Literate programming in Emacs with tangle.

* vpy improvements
Implement two new vpy commands.

1. status
2. auto

** status
The status command will display the following information.

1. The name of the current virtual environment.
2. If we are in automatic or manual mode.

** auto
The auto command will allow you to change between manual and automatic
mode when it comes to virtual environment tracking.

The command auto on will enable automatic virtual environment tracking.

    auto on

The command auto off will disable automatic virtual envionment
tracking.

    auto off

* JavaScript
Figure out a better way for working with JavaScript in Emacs.

Modes that might be interesting here are js2-mode for JS files, and
rjsx-mode for JSX.

There is also indium.

Also people seem to use skewer-mode when developing JavaScript.

https://www.emacswiki.org/emacs/CategoryJavaScript

* Tramp hangs
Tramp seems to hang alot on macOS. Figure out why this is happening.

I have seen some people commenting on that this might be due to the
exec-path-from-shell package.

* Documentation
Write some simple documentation on the following.

1. Registers

* Open new buffer with the contents of the given url.
See if we can find some way to download the url at point and open it
in the current buffer.
* Emacs HTTP client
Is there some kind of simple HTTP client for emacs?

There is a function called url-retrieve-synchronously that can be used
to download the contents of a URL.

There is a library called restclient.el that has url.el as a backend.
There is a library called http.el that has request.el as a backend.

(with-current-buffer (url-retrieve-synchronously "http://stackoverflow.com")
  (prog1
      (buffer-string)
    (kill-buffer)))

https://github.com/emacs-pe/http.el
https://tkf.github.io/emacs-request/

* Emacs HTML parser
The following function can be used to parse HTML.
libxml-parse-html-region
* Emmet mode
Emmet mode for editing web pages.
* Web mode
Figure out how to use web mode better.
* Flycheck for JavaScript
flycheck with eslint to catch bugs and syntax errors.
* Prettier mode
Autoformat JavaScript files with prettier-mode.
* Tern
Use tern with company for code completion of JavaScript.

Tern does not seem to be updated anymore.

Some people seem to use tide with plain JavaScript.
https://github.com/ananthakumaran/tide
* Package management
We can use package-refresh-contents to refresh the emacs package list.
* Generate HTML from Elisp
See if there is something similar to htmlgen for Elisp.
https://franz.com/support/documentation/6.0/doc/aserve/htmlgen.html
* Font Locking
Figure out how font locking works.
http://ergoemacs.org/emacs/elisp_font_lock_mode.html
* Text processing in Emacs
http://ergoemacs.org/emacs/elisp_text_processing_lang.html
http://ergoemacs.org/emacs/elisp_batch_html_tag_transform_bold.html
http://ergoemacs.org/emacs/elisp_fix_dead_links.html
http://ergoemacs.org/emacs/elisp_text-soup_automation.html
http://ergoemacs.org/emacs/elisp_process_html.html
* Prefix command
Looks like there is something called a prefix command.
Perhaps which key can display better information for prefix commands.
http://ergoemacs.org/emacs/emacs_keybinding_power_of_keys_sequence.html
https://www.reddit.com/r/emacs/comments/3ytb6n/a_better_way_to_define_a_new_prefix/

* Expand region
This package looks interesting.
https://github.com/magnars/expand-region.el
* Ranger
See if I find ranger useful.
https://github.com/ralesi/ranger.el
